#!/bin/bash

#-----------------------------------
# Function: Upload your application binary files to App Store
#
# Usage: Copy this `ipa-upload.sh` script into the path of `ipa-build.sh`, type in your Apple Developer Account username and password in line 27 - 28, run `ipa-build.sh` firstly, and then run `ipa-upload.sh`.
#		 
# 
# Author: jumpingfrog0 ( 黄东鸿 ）
# Email:  jumpingfrog0@gmail.com
#         447467113@qq.com
#
# Create Date: 2016/07/14
#
#-----------------------------------

#-----------------------------------
# Warning: 
# This script upload the latest ipa file of the sub-directory in the `export` directory.
# The sub-directory is generated by `ipa-build.sh` script automaticly according to scheme name, version number and generating time, 
# and it upload the last ipa file sorted by filename.
# Please watch out the output in the terminal to make sure you are uploading the correct ipa file.
#-----------------------------------


# Type in your Apple Developer Account username and password here.
USER_NAME="xxx@xx.com"
PASSWORD="xxx"


# check the ipa file whether exists
function CheckIpaExist() {

	# enter `export` directory
	cd export
	if [ $? != '0' ]; then
		echo "Error! No export directory exists. Please run the \"ipa-build\" shell script first."
		exit 1
	fi

	# try to get the sub-directory that included ipa file and check it whether exists
	latest_ipa_directory=`ls -l | tail -n 1 | awk '{print $9}'`

	if [ ! -d "${latest_ipa_directory}" ]; then
		echo "Error! No ipa directory exists. Please run the \"ipa-build\" shell script first."
		exit 1
	fi

	# enter sub-directory and check ipa file whether exists
	cd ${latest_ipa_directory}
	ipa_file=`ls | grep *.ipa`

	if [ ! -f "${ipa_file}" ]; then
		echo "Error! No ipa file exists. Please run the \"ipa-build\" shell script first."
		exit 1
	fi
}

# validate your build whether valid
function Validate() {

	CheckIpaExist

	altool_path="/Applications/Xcode.app/Contents/Applications/Application\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool"
	validate_cmd="${altool_path} --validate-app -f ${ipa_file} -u ${USER_NAME} -p ${PASSWORD} --output-format xml"

	echo ${validate_cmd}
	echo ${validate_cmd} > validate_cmd.sh
	echo "Validating /${latest_ipa_directory}/${ipa_file} ..."
	. validate_cmd.sh
}

# upload your valid build to App Store
function Upload() {
	CheckIpaExist

	altool_path="/Applications/Xcode.app/Contents/Applications/Application\ Loader.app/Contents/Frameworks/ITunesSoftwareService.framework/Versions/A/Support/altool"
	validate_cmd="${altool_path} --upload-app -f ${ipa_file} -u ${USER_NAME} -p ${PASSWORD} --output-format xml"

	echo ${validate_cmd}
	echo ${validate_cmd} > validate_cmd.sh
	echo "Uploading /${latest_ipa_directory}/${ipa_file} ..."
	. validate_cmd.sh
}



echo -e "Would you want to validate the app before upload? Enter [Y/N] to continue : \c"

read should_validate

if [ ${should_validate} = 'Y' \
	-o ${should_validate} = 'y' \
	-o ${should_validate} = 'YES' \
	-o ${should_validate} = 'yes' \
	-o ${should_validate} = 'Yes' ]; then

	Validate
	if [ $? == 0 ]; then
		
		echo " ** VALIDATE SUCCEEDED **"
		Upload

		if [ $? == '0' ]; then
			echo " ** UPLOAD SUCCEEDED **"
		else
			echo " ** UPLOAD FAILED **"
			exit 3
		fi

	else
		echo " ** VALIDATE FAILED **"
		exit 2
	fi

elif [ ${should_validate} = 'N' \
		-o ${should_validate} = 'n' \
		-o ${should_validate} = 'NO' \
		-o ${should_validate} = 'no' \
		-o ${should_validate} = 'No' ]; then

		Upload

		if [ $? == '0' ]; then
			echo " ** UPLOAD SUCCEEDED **"
		else
			echo " ** UPLOAD FAILED **"
			exit 3
		fi
else

	echo "Invalid input, please enter [Y/N]."
	exit 1
fi